*&---------------------------------------------------------------------*
*& Include          YR0127_0360F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form DISPLAY_ALV
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DISPLAY_ALV .
  CALL METHOD GO_GRID->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
      IS_LAYOUT       = GS_LAYOUT
    CHANGING
      IT_OUTTAB       = GT_SCRAP
      IT_SORT         = GT_SORT
      IT_FIELDCATALOG = GT_FCAT.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_FIELDCAT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SET_FIELDCAT .

  CLEAR : GT_FCAT.

  PERFORM SET_FCAT2 CHANGING GT_FCAT. "## ## GT_SCRAP



ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_LAYOUT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SET_LAYOUT .



  CLEAR GS_LAYOUT.
  GS_LAYOUT-ZEBRA = 'X'.
  GS_LAYOUT-CWIDTH_OPT = 'A'.
  GS_LAYOUT-SEL_MODE = 'D'.
  GS_LAYOUT-INFO_FNAME = 'COLOR'.
*  GS_LAYOUT2-GRID_TITLE = TEXT-002.   "## ##
  GS_LAYOUT-STYLEFNAME  ='STYLE'.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form REFRESH_ALV
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM REFRESH_ALV .


  .

  CALL METHOD GO_GRID->REFRESH_TABLE_DISPLAY.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form HANDLE_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->P_E_ROW  text
*      -->P_E_COLUMN  text
*&---------------------------------------------------------------------*
FORM HANDLE_DOUBLE_CLICK  USING    PS_ROW TYPE LVC_S_ROW
                                   PS_COL TYPE LVC_S_COL.

*  CLEAR GT_DISP_ITEM.
*
*  READ TABLE GT_DISP_HEADER INTO GS_DISP_HEADER
*                            INDEX PS_ROW-INDEX.
*  IF SY-SUBRC = 0.
*
*    SELECT EBELN EBELP TXZ01 MATNR MENGE MEINS
*      INTO CORRESPONDING FIELDS OF TABLE GT_DISP_ITEM
*      FROM EKPO
*     WHERE EBELN = GS_DISP_HEADER-EBELN.
*
*    SORT GT_DISP_ITEM BY EBELN EBELP.
*
*  ENDIF.
*
*  PERFORM REFRESH_GRID2.

*PFSTATUS TOOLBAR# ## ## ###, ########
*##, EVENT# ## ## ### PAI PBO######,
*### #### ######.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_EVENT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SET_EVENT .

  CREATE OBJECT GO_EVENT_RECEIVER.


  SET HANDLER GO_EVENT_RECEIVER->HANDLE_DOUBLE_CLICK
          FOR GO_GRID.

  SET HANDLER GO_EVENT_RECEIVER->HANDLE_HOTSPOT_CLICK
         FOR GO_GRID.

  SET HANDLER GO_EVENT_RECEIVER->HANDLE_DATA_CHANGED
        FOR GO_GRID.
  CALL METHOD GO_GRID->REGISTER_EDIT_EVENT
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form GET_HEADER_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM GET_HEADER_DATA .






ENDFORM.
*&---------------------------------------------------------------------*
*& Form HANDLE_HOTSPOT_CLICK
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->P_E_ROW_ID  text
*      -->P_E_COLUMN_ID  text
*&---------------------------------------------------------------------*
FORM HANDLE_HOTSPOT_CLICK  USING    PS_ROW TYPE LVC_S_ROW
                                    PS_COLUMN_ID TYPE LVC_S_COL
                                    P_SENDER.

*  CASE P_SENDER.
*    WHEN GO_GRID.
*      "## ##### ### #### ## (######:EBELN)
*      READ TABLE GT_DISP_HEADER INTO GS_DISP_HEADER
*                                INDEX PS_ROW-INDEX.
*      IF SY-SUBRC = 0.
*
*        SET PARAMETER ID 'BES' FIELD GS_DISP_HEADER-EBELN.
*        CALL TRANSACTION 'ME23N'.
*
*      ENDIF.
*
*
*  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form REFRESH_GRID2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM REFRESH_GRID .

  CALL METHOD GO_GRID->REFRESH_TABLE_DISPLAY.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_GR
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form GET_PERIOD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form GET_BATCH
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form BATCH_DAT1
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form BATCH_DAT2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form BATCH_DAT4
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*





*&---------------------------------------------------------------------*
*& Form SCRAP_QUANTITY
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SCRAP_DATA .
  DATA : LT_MAKT TYPE TABLE OF MAKT,
         LS_MAKT TYPE MAKT.
  DATA : LS_SCRAP LIKE GS_SCRAP.
  CLEAR :  GT_SCRAP, LT_MAKT.
  CASE 'X'.
    WHEN P_RAD1. "####
      SELECT MBLNR USNAM WERKS LGORT MATNR BUDAT CPUTM MEINS MENGE BWART CHARG_SID SMBLN SJAHR SMBLP "#### ##, ##,
      INTO CORRESPONDING FIELDS OF TABLE GT_SCRAP
      FROM matdoc
      WHERE BWART BETWEEN 'Z11' AND 'Z14'      "Z11 : #### Z13 : ########
      AND STOCK_QTY < 0          "####
      AND BUDAT IN S_DATE
      AND MBLNR IN S_MBLNR
      AND MATNR IN S_MATNR.


      SELECT MAKTX MATNR
        INTO CORRESPONDING FIELDS OF TABLE LT_MAKT
        FROM MAKT
        WHERE MATNR LIKE 'JG-A03-%'.

      LOOP AT GT_SCRAP INTO GS_SCRAP.

        IF GS_SCRAP-SMBLN IS NOT INITIAL.
          DELETE GT_SCRAP WHERE MBLNR = GS_SCRAP-SMBLN.
        ENDIF.
        READ TABLE LT_MAKT INTO LS_MAKT WITH KEY MATNR = GS_SCRAP-MATNR.
        GS_SCRAP-MAKTX = LS_MAKT-MAKTX.
        IF GS_SCRAP-BWART = 'Z11'.
          GS_SCRAP-MVTKO = 'QUALITY ## ##'.
          GS_SCRAP-COLOR = 'C300'.
        ELSEIF GS_SCRAP-BWART = 'Z13'.
          GS_SCRAP-MVTKO = '#### ## ##'.
          GS_SCRAP-COLOR = 'C400'.
        ENDIF.

        MODIFY GT_SCRAP FROM GS_SCRAP.

        CLEAR GS_SCRAP.
      ENDLOOP.
      "#######
      DELETE GT_SCRAP WHERE BWART = 'Z14'.


    WHEN P_RAD2. "####
      SELECT MBLNR USNAM WERKS LGORT MATNR BUDAT CPUTM MEINS MENGE BWART CHARG_SID SMBLN SJAHR SMBLP "#### ##, ##,
      INTO CORRESPONDING FIELDS OF TABLE GT_SCRAP
      FROM MATDOC
      WHERE BWART BETWEEN 'Z11' AND 'Z14'
      AND STOCK_QTY < 0          "####
      AND BUDAT IN S_DATE
      AND MBLNR IN S_MBLNR
      AND MATNR IN S_MATNR.



      SELECT MAKTX MATNR
        INTO CORRESPONDING FIELDS OF TABLE LT_MAKT
        FROM MAKT
        WHERE MATNR LIKE 'JG-A03-%'.

      LOOP AT GT_SCRAP INTO GS_SCRAP.
        READ TABLE LT_MAKT INTO LS_MAKT WITH KEY MATNR = GS_SCRAP-MATNR.
        GS_SCRAP-MAKTX = LS_MAKT-MAKTX.
        IF GS_SCRAP-BWART = 'Z11'.
          GS_SCRAP-MVTKO = 'QUALITY ## ##'.
          GS_SCRAP-COLOR = 'C300'.
        ELSEIF GS_SCRAP-BWART = 'Z13'.
          GS_SCRAP-MVTKO = '#### ## ##'.
          GS_SCRAP-COLOR = 'C400'.
        ELSEIF GS_SCRAP-BWART = 'Z14'.
          GS_SCRAP-MVTKO = '#### ## ## ##'.
          GS_SCRAP-COLOR = 'C600'.
        ENDIF.

        MODIFY GT_SCRAP FROM GS_SCRAP.
        CLEAR GS_SCRAP.
      ENDLOOP.
  ENDCASE.
  SORT GT_SCRAP BY  MBLNR DESCENDING  . "#### ### "ALV# ## # SORT### #####
  PERFORM SET_EDIT.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_FCAT2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      <--P_GT_FCAT2  text
*&---------------------------------------------------------------------*
FORM SET_FCAT2  CHANGING PT_FCAT LIKE GT_FCAT.


  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'CHECK'.
  GS_FCAT-COLTEXT    = '##'.
  GS_FCAT-CHECKBOX = 'X'.
  GS_FCAT-EDIT = 'X'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'MBLNR'.
  GS_FCAT-COLTEXT    = '####'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME = 'MATNR'.
  GS_FCAT-COLTEXT   = '####'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'MAKTX'.
  GS_FCAT-COLTEXT    = '##'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'CHARG_SID'.
  GS_FCAT-COLTEXT    = '## ##'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'BWART'.
  GS_FCAT-COLTEXT    = 'MVT'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'MVTKO'.
  GS_FCAT-COLTEXT    = '####'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'MENGE'.
  GS_FCAT-COLTEXT    = '##'.
  GS_FCAT-QFIELDNAME = 'MEINS'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'MEINS'.
  GS_FCAT-COLTEXT    = '##'.
  APPEND GS_FCAT TO PT_FCAT.



  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'BUDAT'.
  GS_FCAT-COLTEXT    = '####'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME  = 'CPUTM'.
  GS_FCAT-COLTEXT    = '####'.
  APPEND GS_FCAT TO PT_FCAT.







  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME = 'WERKS'.
  GS_FCAT-COLTEXT   = '###'.
  APPEND GS_FCAT TO PT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME = 'LGORT'.
  GS_FCAT-COLTEXT   = '####'.
  APPEND GS_FCAT TO PT_FCAT.


  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME = 'USNAM'.
  GS_FCAT-COLTEXT   = '#####'.
  APPEND GS_FCAT TO PT_FCAT.

  CASE 'X'.
    WHEN P_RAD2. "####
      CLEAR GS_FCAT.
      GS_FCAT-FIELDNAME  = 'SMBLN'.
      GS_FCAT-COLTEXT    = '######'.
      APPEND GS_FCAT TO PT_FCAT.
*    CLEAR GS_FCAT.
*  GS_FCAT-FIELDNAME  = 'SMBLP'.
*  GS_FCAT-COLTEXT    = '##ITEM##'.
*  APPEND GS_FCAT TO PT_FCAT.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SEARCH_PERIOD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SEARCH_PERIOD .

  DATA LV_DATA TYPE SYST-DATUM.
  CLEAR : LV_DATA, S_DATE, S_DATE[].
*  LV_DATA = SY-DATUM+0(6) && 01.
*  S_DATE-SIGN = 'I'.
*  S_DATE-OPTION = 'BT'.
*  S_DATE-LOW = LV_DATA.
*  S_DATE-HIGH = SY-DATUM.
LV_DATA = '20201101'.
  S_DATE-SIGN = 'I'.
  S_DATE-OPTION = 'BT'.
  S_DATE-LOW = LV_dATA.
  S_DATE-HIGH = '20201130'.
  APPEND S_DATE.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form UNDO_MVT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM UNDO_MVT .


  CLEAR : GV_EXIT,RT_BAPIRET, RT_BAPIRET[].


  "### ### #### ##
  CALL METHOD GO_GRID->CHECK_CHANGED_DATA.


  PERFORM CHECK_SELECTED_ROWS.


  CALL FUNCTION 'BAPI_GOODSMVT_CANCEL'
    EXPORTING
      MATERIALDOCUMENT = GV_MBLNR
      MATDOCUMENTYEAR  = SY-DATUM+0(4)
*     GOODSMVT_PSTNG_DATE       =
*     GOODSMVT_PR_UNAME         =
*     DOCUMENTHEADER_TEXT       =
* IMPORTING
*     GOODSMVT_HEADRET =
    TABLES
      RETURN           = RT_BAPIRET[]
*     GOODSMVT_MATDOCITEM       =
    .


  IF SY-SUBRC = 0 AND RT_BAPIRET[] IS INITIAL.

*   COMMIT
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = 'X'.
    MESSAGE S000. "## ## #####.

  ELSE.
    "####
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*         IMPORTING
*           RETURN        =
      .

    MESSAGE S999 DISPLAY LIKE 'E' WITH RT_BAPIRET-MESSAGE.  "#######
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHECK_SELECTED_ROWS
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CHECK_SELECTED_ROWS .
  DATA LV_ANSWER  TYPE C.



  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      TITLEBAR              = '#### ## ##'
      TEXT_QUESTION         = '### ### ########?'
      TEXT_BUTTON_1         = '#'
      ICON_BUTTON_1         = 'ICON_CHECKED'
      TEXT_BUTTON_2         = '###'
      ICON_BUTTON_2         = 'ICON_INCOMPLETE'
      DISPLAY_CANCEL_BUTTON = SPACE
    IMPORTING
      ANSWER                = LV_ANSWER.

  IF LV_ANSWER = 2.
    GV_EXIT = 'X'.
  ELSE.
    READ TABLE  GT_SCRAP INTO GS_SCRAP WITH KEY CHECK = 'X'.

    GV_MBLNR = GS_SCRAP-MBLNR.

  ENDIF.




ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_SORT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SET_SORT .

  CLEAR GS_SORT.
  GS_SORT-FIELDNAME = 'MBLNR'.
  GS_SORT-DOWN = 'X'.
  APPEND GS_SORT TO GT_SORT.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form HANDLE_DATA_CHNAGED
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->P_ER_DATA_CHANGED  text
*&---------------------------------------------------------------------*
FORM HANDLE_DATA_CHNAGED  USING PO_DATA_CHANGED
                          TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL.
  DATA : LS_GOOD_CELLS TYPE LVC_S_MODI,
         LT_GOOD_CELLS TYPE LVC_T_MODI.
  DATA : LS_SCRAP LIKE GS_SCRAP.
  CLEAR : LT_GOOD_CELLS, LS_GOOD_CELLS.
  LT_GOOD_CELLS = PO_DATA_CHANGED->MT_GOOD_CELLS.

  DATA: LV_MBLNR LIKE GS_SCRAP-MBLNR.
  LOOP AT LT_GOOD_CELLS INTO LS_GOOD_CELLS.


    CASE LS_GOOD_CELLS-FIELDNAME.
        "### ## ##### ## # ## ##
      WHEN 'CHECK'.
*
        READ TABLE GT_SCRAP INTO LS_SCRAP INDEX LS_GOOD_CELLS-ROW_ID.
        LOOP AT GT_SCRAP INTO GS_SCRAP .
          IF GS_SCRAP-MBLNR = LS_SCRAP-MBLNR.
            IF GS_SCRAP-CHECK = ''.
            GS_SCRAP-CHECK = 'X'.
*            CALL METHOD PO_DATA_CHANGED->MODIFY_CELL "## ### ##### CHANGE# ROW# #### ###
*              EXPORTING
*                I_ROW_ID    = SY-TABIX
*                I_FIELDNAME = 'CHECK'
*                I_VALUE     = 'X'.
ELSEIF GS_SCRAP-CHECK = 'X'.
       "### ## ## ## ##
  CLEAR GS_SCRAP-CHECK.
       ENDIF.
          ELSE.
            CLEAR GS_SCRAP-CHECK. "### DO# ###
          ENDIF.
          MODIFY GT_SCRAP FROM GS_SCRAP.
          CLEAR GS_SCRAP.
        ENDLOOP.




        "## ### ##
*        IF LS_GOOD_CELLS-VALUE eq 'X'.
*          CLEAR: GS_SCRAP.
*          READ TABLE GT_SCRAP INTO GS_SCRAP INDEX LS_GOOD_CELLS-ROW_ID.
*          IF SY-SUBRC EQ 0.
"## ## ##### #### ### #### ## ###
"GS_SCRAP-MBLNR ### #### ###
**            DATA(LV_MBLNR) = GS_SCRAP-MBLNR.
*            LV_MBLNR = GS_SCRAP-MBLNR.
*            CLEAR: GS_SCRAP.
*            LOOP AT GT_SCRAP INTO GS_SCRAP WHERE MBLNR = LV_MBLNR.
*              GS_SCRAP-CHECK = 'X'.
*
*            ENDLOOP.
*            ELSE.
*              CLEAR GS_SCRAP-CHECK.
*ENDIF.



    ENDCASE.

  ENDLOOP.

  PERFORM REFRESH_ALV.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_EDIT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SET_EDIT .

  CLEAR : GS_SCRAP.

  DATA LS_STYLE TYPE LVC_S_STYL.

  LOOP AT GT_SCRAP INTO GS_SCRAP WHERE BWART <> 'Z13'.


    LS_STYLE-FIELDNAME = 'CHECK'.
    LS_STYLE-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.

    APPEND LS_STYLE TO GS_SCRAP-STYLE.
    CLEAR LS_STYLE.
    MODIFY GT_SCRAP FROM GS_SCRAP.



  ENDLOOP.



ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 751
